{"version":3,"sources":["components/appbar/AppBar.js","components/readinesstable/ReadinessTable.js","components/replicationtable/ReplicationTable.js","components/coloralerts/ColorAlerts.js","config/DefaultSettings.js","components/executioncard1/ExecutionCard1.js","pages/home/Home.js","pages/services/Services.js","pages/report/Report.js","components/executioncard2/ExecutionCard2.js","components/simplepopover/SimplePopover.js","components/timelinecard/TimelineCard.js","components/tileview/Tileview.js","components/exportselectorgrid/ExportSelectorGrid.js","components/headcard/Headcard.js","components/midcard/MidCard.js","components/footcard/FootCard.js","components/usercard/Usercard.js","components/beforecard/BeforeCard.js","components/aftercard/AfterCard.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MainAppBar","props","classes","useTheme","history","useHistory","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","edge","Typography","variant","noWrap","Drawer","paper","onClick","direction","Divider","List","map","text","index","ListItem","button","key","push","ListItemIcon","ListItemText","primary","children","table","minWidth","ReadinessTable","data","TableContainer","component","Paper","Table","TableHead","TableRow","row","TableCell","value1","TableBody","value2","ReplicationTable","lane","marginTop","Config","Alert","elevation","ExecutionCard1","workflow","setWorkflow","successPercent","work","filter","x","status","length","success","parseInt","toFixed","name","start_time","Date","toLocaleString","timezone","end_time","loadWorkflow","a","options","headers","Authorization","axios","post","object_name","response","message_workflow","message_workflow_alert","run_id","handleClose","event","reason","Grid","item","sm","xs","Card","style","background","CardContent","title","Box","mr","LinearProgress","value","align","paddingLeft","estimated_runtime","status_text","Tooltip","arrow","size","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","CardActions","md","lg","styled","typography","body2","textAlign","palette","secondary","Home","dashboard","setDashboard","useEffect","loadDashboard","interval","setInterval","clearInterval","get","vara","static_values","container","rowpacing","Tileview","margin","mapContainer","height","backgroundColor","agentsContainer","Services","serviceIndex","setServiceIndex","services","setServices","setNetworks","readiness","setReadiness","replication","setReplication","execution1","setExecution1","execution2","setExecution2","children1","setChildren1","children2","setChildren2","setHistory","loading","useRef","loadNetworks","loadReadiness","loadReplication","loadExecution1","loadExecution2","loadHistory","loadChildren1","loadChildren2","loadServices","url","archive_key2","i","id","rtoStatus","isNaN","runtime","parseFloat","archive_key1","value4","value5","values","sort","b","value3","CircularProgress","FormControl","formControl","InputLabel","Select","labelId","onOpen","onChange","target","MenuItem","object","TimelineCard","ExecutionCard2","ExportSelectorGrid","Report","runId","useParams","before","setBefore","after","setAfter","isExeLoaded","setIsExeLoaded","componentRef","useReactToPrint","current","tables","getElementsByTagName","columns","scaleFactor","Array","from","reduce","acc","col","j","LoadExecution1","loadBefore","loadAfter","ref","html2pdf","set","filename","image","type","quality","html2canvas","scale","jsPDF","unit","format","orientation","pagebreak","avoid","fit","save","FootCard","fontFamily","BeforeCard","AfterCard","secondaryTail","main","anchorEl","setAnchorEl","Boolean","undefined","currentTarget","Popover","transformOrigin","Timeline","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","alias","flexWrap","boxShadow","siteState","Item","getSiteIcon","fontSize","Fragment","sx","borderLeft","borderColor","bgcolor","field","headerName","valueFormatter","moment","tz","renderCell","Chip","label","params","to","rows","pageSize","rowsPerPageOptions","disableSelectionOnClick","forwardRef","TextField","m","helperText","paddingTop","paddingBottom","focused","InputProps","startAdornment","InputAdornment","fullWidth","Midcard","run_time","slo_time","autoHeight","initialState","pagination","paginationModel","page","editable","maxWidth","multiline","maxRows","StatusIcon","App","rel","href","path","SendEmail","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3cf7bcf9.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport AppsIcon from '@mui/icons-material/Apps';\r\nimport AssessmentIcon from '@mui/icons-material/Assessment';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MainAppBar(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            // onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"overline\" noWrap>\r\n            Automic Intelligent Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Home', 'Services'].map((text, index) => (\r\n            <ListItem button key={text} onClick={() => history.push(\"/dr-dashboard/\"+text)}>\r\n              <ListItemIcon>{index === 0 ?  (<AssessmentIcon />) : index  === 1 ? (<AppsIcon /> ): (<AssessmentIcon />)}</ListItemIcon>\r\n         \r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        \r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\n\r\nexport default function ReadinessTable(props) {\r\n  const classes = useStyles();\r\n\r\n  if (props.data == null) {\r\n    return null;\r\n  }\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"caption table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {props.data.map((row, index) => (\r\n              <TableCell key={row+index}>{row.value1}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            {props.data.map((row, index) => (\r\n              <TableCell key={row+index}>{row.value2}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function ReplicationTable(props) {\r\n  const classes = useStyles();\r\n\r\n  if (props.data == null) {\r\n    return null;\r\n  }\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        {/* <caption>A basic table example with a caption</caption> */}\r\n        <TableHead>\r\n          <TableRow>\r\n            {props.data.map((lane, index) => (\r\n              <TableCell key={lane+index}>{lane.value1}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            {props.data.map((lane, index) => (\r\n              <TableCell key={lane+index}>{lane.value2}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ColorAlerts() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert severity=\"success\" color=\"info\">\r\n        This is a success alert — check it out!\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","\r\nexport const Config = {\r\n    //base_url: 'http://localhost:8088/ae/api/v1'\r\n    base_url: 'http://localhost:8088/ae/api/v1',\r\n    //client: '100'\r\n    client: '100',\r\n    //authorization: Basic Authorization Header\r\n    authorization: 'Basic QVVUT01JQy9BVVRPTUlDOkFVVE9NSUM=',\r\n    //application_list: Automic VARA object which defines the application list\r\n    application_list: 'VARA.DRM.APPS',\r\n    //sys_timezone: Mention the required TZ database name. Example (America/Chicago)\r\n    sys_timezone: 'Asia/Dubai',\r\n    //refresh_interval: Auto Refresh Interval in milliseconds\r\n    refresh_interval: '10000',\r\n    //dashboard_variable: Automic VARA object which defines the dashbaord\r\n    dashboard_variable: 'VARA.DRM.DASHBOARD',\r\n    // tile_size:  Tile Size in Home Page; 2=> 12/2 tiles in one row\r\n    tile_size: 2,\r\n\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Config } from \"../../config/DefaultSettings\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport PlayCircleOutlineTwoToneIcon from '@mui/icons-material/PlayCircleOutlineTwoTone';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nlet success = 0;\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function ExecutionCard1(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alertopen, setAlertOpen] = React.useState(null);\r\n  const [workflow, setWorkflow] = React.useState([]);\r\n\r\n\r\n  let successCount = props.work.filter((x) => x.status >= 1900).length;\r\n  let successPercent = (successCount / props.work.length) * 100;\r\n  let success = parseInt(successPercent.toFixed(0));\r\n\r\n\r\n  if (props.data == null) {\r\n    return null;\r\n  }\r\n  const objectname = props.data.name;\r\n  //Date Conversion\r\n  var start_temp_time = new Date(props.data.start_time);\r\n  var start_time = start_temp_time.toLocaleString(\"en-US\", {\r\n    timezone: Config.sys_timezone,\r\n  });\r\n  var end_temp_time = new Date(props.data.end_time);\r\n  var end_time = end_temp_time.toLocaleString(\"en-US\", {\r\n    timezone: Config.sys_timezone,\r\n  });\r\n\r\n  const loadWorkflow = async () => {\r\n    const options = {\r\n      headers: {\r\n        Authorization: Config.authorization,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const response = await axios.post(\r\n      Config.base_url + \"/\" + Config.client + \"/executions/\",\r\n      { object_name: props.data.name },\r\n      options\r\n    );\r\n    const exec_response = response.data;\r\n    setWorkflow(response.data);\r\n    setOpen(true);\r\n\r\n  };\r\n\r\n  const message_workflow = workflow;\r\n  const message_workflow_id = workflow.run_id;\r\n  const message_workflow_alert = \"Launch Completed Successfully!, RunId:\" + message_workflow_id;\r\n\r\n  const handleClick = () => {\r\n    loadWorkflow();\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n\r\n    <Grid item sm xs={12}>\r\n      <Card\r\n        className={classes.root}\r\n        variant=\"outlined\"\r\n        // style={{ background: \"#dbd9d9\" }}\r\n        style={{ background: \"#D4D4D4\" }}\r\n      >\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\">\r\n            {props.data.title}\r\n          </Typography>\r\n\r\n          <div>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" value={success} style={{ background: \"white\", color: \"#097d01\" }} />\r\n              </Box>\r\n              <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {success}%\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n\r\n          </div>\r\n\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                component=\"h2\"\r\n                align=\"left\"\r\n                color=\"primary\"\r\n                style={{ paddingLeft: \"20px\" }}\r\n              >\r\n                <b>Worfklow</b>: {props.data.name}\r\n              </Typography>\r\n            </Box>\r\n            <Box minWidth={35}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                component=\"h2\"\r\n                align=\"left\"\r\n                color=\"textSecondary\"\r\n                style={{ paddingLeft: \"20px\" }}\r\n              >\r\n                <b>Start Time:</b> {start_time}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                component=\"h2\"\r\n                align=\"left\"\r\n                color=\"textSecondary\"\r\n                style={{ paddingLeft: \"20px\" }}\r\n              >\r\n                <b>End Time:</b> {end_time}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                component=\"h2\"\r\n                align=\"left\"\r\n                color=\"textSecondary\"\r\n                style={{ paddingLeft: \"20px\" }}\r\n              >\r\n                <b>Estimated Runtime:</b> {(props.data.estimated_runtime / 60).toFixed(2)} min(s)\r\n              </Typography>\r\n              <Box width=\"100%\" mr={1}>\r\n                <Typography\r\n                  variant=\"overline\"\r\n                  component=\"h2\"\r\n                  align=\"left\"\r\n                  color=\"textSecondary\"\r\n                  style={{ paddingLeft: \"20px\" }}\r\n                >\r\n                  <b>Status:</b> {props.data.status_text}{\" \"}\r\n                  <span style={{ paddingLeft: \"400px\" }}> </span>\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box>\r\n            <Tooltip title=\"Execute\" arrow>\r\n              <IconButton aria-label=\"execute\" onClick={handleClick} color=\"primary\" size=\"small\" >\r\n                <PlayCircleOutlineTwoToneIcon /></IconButton>\r\n            </Tooltip>\r\n            <Snackbar\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              open={open}\r\n              autoHideDuration={6000}\r\n              onClose={handleClose}\r\n            >\r\n              <Alert onClose={handleClose} severity={message_workflow.run_id == null ? \"Error\" : \"Success\"}>\r\n                {message_workflow.run_id == null ? \"Error occured: Checkout the Automic UI\" : message_workflow_alert}\r\n\r\n              </Alert>\r\n            </Snackbar>\r\n          </Box>\r\n\r\n        </CardContent>\r\n        <CardActions>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={4}\r\n            lg={11}\r\n\r\n          ></Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { styled } from '@mui/material/styles';\r\nimport { Tileview } from \"../../components\";\r\nimport { Config } from \"../../config/DefaultSettings\";\r\nimport axios from \"axios\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\nexport default function Home() {\r\n  const [dashboard, setDashboard] = React.useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    loadDashboard();\r\n\r\n    const interval = setInterval(() => {\r\n      loadDashboard();\r\n\r\n\r\n    }, Config.refresh_interval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    loadDashboard();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const loadDashboard = async () => {\r\n\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    var response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/objects/\" +\r\n      Config.dashboard_variable,\r\n\r\n      options\r\n\r\n    );\r\n\r\n    setDashboard(response.data.data.vara.static_values);\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid style={{ padding: 20 }}>\r\n      <Grid >\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"h1\"\r\n          align=\"center\"\r\n\r\n\r\n        >\r\n          <b>CRITICAL BUSINESS APPS</b>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid container rowpacing={1} spacing={5} style={{ padding: 20 }}\r\n      >\r\n\r\n\r\n        {dashboard.map((item, index) => (\r\n          <Grid key={\"grid_\" + item + index} item xs={6} md={Config.tile_size}>\r\n            <Tileview key={\"tileview_\" + item + index} data={item} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Config } from \"../../config/DefaultSettings\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TimelineCard } from \"../../components\";\r\n\r\nimport { ReadinessComponent } from \"../../components\";\r\nimport { ReplicationComponent } from \"../../components\";\r\nimport { ExecutionCard1 } from \"../../components\";\r\nimport { ExecutionCard2 } from \"../../components\";\r\nimport { Canvas } from \"../../components\";\r\nimport { ExportSelectorGrid } from \"../../components\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nimport axios from \"axios\";\r\n// import { LinearProgress } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: 25,\r\n    margin: 10,\r\n    //background: '#8b0000'\r\n  },\r\n  mapContainer: {\r\n    height: `100vh`,\r\n    width: `calc(100%)`,\r\n    backgroundColor: \"#f00\",\r\n  },\r\n  agentsContainer: {\r\n    height: `100vh`,\r\n    width: `calc(100%)`,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst gap = 5;\r\nconst primaryX = 5;\r\n\r\nexport default function Services(props) {\r\n  const classes = useStyles();\r\n\r\n  const [serviceIndex, setServiceIndex] = React.useState(-1);\r\n  const [open, setOpen] = React.useState(false);\r\n  let refresh_key = 0;\r\n  const [services, setServices] = React.useState([]);\r\n  const [networks, setNetworks] = React.useState(null);\r\n  const [readiness, setReadiness] = React.useState([]);\r\n  const [replication, setReplication] = React.useState([]);\r\n  const [execution1, setExecution1] = React.useState([]);\r\n  const [execution2, setExecution2] = React.useState([]);\r\n  const [children1, setChildren1] = React.useState([]);\r\n  const [children2, setChildren2] = React.useState([]);\r\n  const [workflow, setWorkflow] = React.useState([]);\r\n  const [history, setHistory] = React.useState([]);\r\n  const [links, setLinks] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const canvasRef = useRef(null);\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  const handleChange = (event) => {\r\n    setServiceIndex(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const ref = useRef();\r\n  const useForceUpdate = () => {\r\n    const [, setState] = React.useState();\r\n    return setState;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (serviceIndex == -1) {\r\n      return;\r\n    }\r\n    loadNetworks();\r\n    loadReadiness();\r\n    loadReplication();\r\n    loadExecution1();\r\n    loadExecution2();\r\n    loadHistory();\r\n    loadChildren1();\r\n    loadChildren2();\r\n\r\n    const interval = setInterval(() => {\r\n      loadNetworks();\r\n      loadReadiness();\r\n      loadReplication();\r\n      loadExecution1();\r\n      loadExecution2();\r\n      loadHistory();\r\n      loadChildren1();\r\n      loadChildren2();\r\n      loadServices();\r\n\r\n    }, Config.refresh_interval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [serviceIndex, services]);\r\n  useEffect(() => {\r\n\r\n    loadServices();\r\n  }, []);\r\n\r\n  const loadServices = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/objects/\" +\r\n      Config.application_list,\r\n      options\r\n    );\r\n    setServices(response.data.data.vara.static_values);\r\n    if (serviceIndex == -1) {\r\n      setServiceIndex(0);\r\n    }\r\n  };\r\n\r\n  const loadWorkflow = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/objects/\" +\r\n      \"VARA.DRM.WORKFLOWS\",\r\n      options\r\n    );\r\n    setWorkflow(response.data.data.vara.static_values.services[1].key1.value1);\r\n  };\r\n\r\n  const loadExecution1 = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const url =\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/executions/\" +\r\n      services[serviceIndex].value1;\r\n    const response = await axios.get(url, options);\r\n    setExecution1(response.data);\r\n  };\r\n\r\n  const loadExecution2 = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/executions/\" +\r\n      services[serviceIndex].value2,\r\n      options\r\n    );\r\n    setExecution2(response.data);\r\n  };\r\n\r\n  const loadHistory = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/executions\" +\r\n      \"?archive_key2=\" +\r\n      services[serviceIndex].key +\r\n      \"&include_deactivated=true\" +\r\n      // timeframe to pull historical data\r\n\r\n      \"&time_frame_from=2015-04-15T06:37:59Z\",\r\n\r\n      options\r\n    );\r\n   \r\n    var history = response.data.data.filter(\r\n      (item) => item.archive_key2 === services[serviceIndex].key\r\n    );\r\n\r\n    for (var i = 0; i < history.length; i++) {\r\n      history[i].id = i;\r\n      history[i].rtoStatus = false;\r\n      if (!isNaN(history[i].runtime))\r\n        history[i].rtoStatus = ((history[i].runtime / 60).toFixed(2) < parseFloat(history[i].archive_key1))\r\n    }\r\n    setHistory(history);\r\n  };\r\n\r\n  const loadChildren1 = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/executions/\" +\r\n      services[serviceIndex].value1 +\r\n      \"/children\",\r\n      options\r\n    );\r\n    setChildren1(response.data.data);\r\n  };\r\n  const loadChildren2 = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/executions/\" +\r\n      services[serviceIndex].value2 +\r\n      \"/children\",\r\n      options\r\n    );\r\n    // console.log(\"children\", response.data.data);\r\n    setChildren2(response.data.data);\r\n  };\r\n\r\n  const loadNetworks = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/objects/\" +\r\n      services[serviceIndex].value4,\r\n      options\r\n    );\r\n\r\n    setNetworks(response.data);\r\n  };\r\n\r\n  const loadReadiness = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/objects/\" +\r\n      services[serviceIndex].value5,\r\n      options\r\n    );\r\n    var values = response.data.data.vara.static_values;\r\n    values.sort(function (a, b) {\r\n      return parseInt(b) - parseInt(a);\r\n    });\r\n    setReadiness(values);\r\n  };\r\n\r\n  const loadReplication = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    // debugger;\r\n    const response = await axios.get(\r\n      Config.base_url +\r\n      \"/\" +\r\n      Config.client +\r\n      \"/objects/\" +\r\n      services[serviceIndex].value3,\r\n      options\r\n    );\r\n    var values = response.data.data.vara.static_values;\r\n    values.sort(function (a, b) {\r\n      return parseInt(b) - parseInt(a);\r\n    });\r\n    setReplication(values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {setCounter(1)} */}\r\n      {loading && (\r\n        <Grid align=\"right\">\r\n          <CircularProgress />{\" \"}\r\n        </Grid>\r\n      )}\r\n      {!loading && (\r\n        <Grid container className={classes.root} spacing={1}>\r\n\r\n          <Grid item xs={12}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-controlled-open-select-label\">\r\n                <Typography variant=\"overline\" component=\"h2\">\r\n                  Services\r\n                </Typography>\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={serviceIndex}\r\n                onChange={handleChange}\r\n              >\r\n\r\n\r\n                {services.map((item, index) => (\r\n                  <MenuItem key={index} value={index}>{item.key}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={5}>\r\n            <Paper>\r\n              <ExecutionCard1\r\n                data={execution1}\r\n                work={children1}\r\n                object={workflow}\r\n              />\r\n            </Paper>\r\n            <Grid>\r\n              <TimelineCard data={children1} />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={1}></Grid>\r\n          <Grid item xs={5}>\r\n            <Paper>\r\n              <ExecutionCard2 data={execution2} work={children2} />\r\n            </Paper>\r\n            <Grid>\r\n              <TimelineCard data={children2} />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <Typography variant=\"overline\" component=\"h4\">\r\n              Readiness Information\r\n            </Typography>\r\n            <ReadinessComponent data={readiness} />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <Typography variant=\"overline\" component=\"h4\">\r\n              Replication Information\r\n            </Typography>\r\n            {replication == null ? null : (\r\n              <ReplicationComponent data={replication} />\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={11} align=\"center\">\r\n\r\n            <Grid item >\r\n              <Typography variant=\"overline\" component=\"h4\" align=\"left\">\r\n                Execution History\r\n              </Typography>\r\n              <Card>\r\n                <Paper>\r\n                  <Box>\r\n                    {history == null ? null : (<ExportSelectorGrid data={history} />)}\r\n                  </Box>\r\n                </Paper>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { HeadCard, MidCard, FootCard, Usercard, BeforeCard, AfterCard } from \"../../components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Config } from \"../../config/DefaultSettings\";\r\nimport axios from \"axios\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DownloadForOfflineTwoToneIcon from '@mui/icons-material/DownloadForOfflineTwoTone';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport {\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { saveAs } from 'file-saver'; // library to save file\r\nimport html2pdf from 'html2pdf.js';\r\n\r\nexport default function Report() {\r\n  let { runId } = useParams();\r\n  const [children1, setChildren1] = React.useState([]);\r\n  const [before, setBefore] = React.useState([]);\r\n  const [after, setAfter] = React.useState([]);\r\n  const [execution1, setExecution1] = React.useState([]);\r\n  const [isExeLoaded, setIsExeLoaded] = React.useState(false);\r\n\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Adjust tabular column width before downloading PDF\r\n    if (componentRef.current) {\r\n      const tables = componentRef.current.getElementsByTagName('table');\r\n      for (let i = 0; i < tables.length; i++) {\r\n        const table = tables[i];\r\n        const columns = table.getElementsByTagName('col');\r\n        const totalWidth = Array.from(columns).reduce((acc, col) => acc + col.width, 0);\r\n        const scaleFactor = 100 / totalWidth;\r\n        for (let j = 0; j < columns.length; j++) {\r\n          columns[j].width = `${columns[j].width * scaleFactor}%`;\r\n        }\r\n      }\r\n    }\r\n  }, [componentRef]);\r\n\r\n  const downloadPDF = () => {\r\n    const opt = {\r\n      margin: 1,\r\n      filename: 'report.pdf',\r\n      image: { type: 'jpeg', quality: 0.98 },\r\n      html2canvas: { scale: 2 },\r\n      jsPDF: { unit: 'pt', format: 'a2', orientation: 'portrait' },\r\n      pagebreak: { avoid: '.pagebreak' },\r\n      fit: { width: '100%', height: 'auto' },\r\n    };\r\n    html2pdf().set(opt).from(componentRef.current).save();\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const reportUrl = 'componentRef.current'; // URL of the PDF report\r\n    const fileName = 'report.pdf'; // name of the file to be saved\r\n\r\n    fetch(reportUrl)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.blob();\r\n      })\r\n      .then(blob => {\r\n        saveAs(blob, fileName);\r\n      })\r\n      .catch(error => {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    loadChildren1();\r\n    LoadExecution1();\r\n    loadBefore();\r\n    loadAfter();\r\n  }, []);\r\n  const options = {\r\n    orientation: 'portrait',\r\n    unit: 'in',\r\n    format: [12, 15],\r\n  };\r\n\r\n  const LoadExecution1 = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    var response = await axios.get(\r\n      Config.base_url + \"/\" + Config.client + \"/executions/\" + runId,\r\n      options\r\n    );\r\n    setIsExeLoaded(true);\r\n    setExecution1(response.data);\r\n  }\r\n\r\n  const loadBefore = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(Config.base_url + \"/\" + Config.client + \"/objects/\" + \"VARA.BEFORE.\" + runId,\r\n      options\r\n    );\r\n    var values = response.data.data.vara.static_values;\r\n    setBefore(values);\r\n  };\r\n\r\n  const loadAfter = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    const response = await axios.get(Config.base_url + \"/\" + Config.client + \"/objects/\" + \"VARA.AFTER.\" + runId,\r\n      options\r\n    );\r\n    var values = response.data.data.vara.static_values;\r\n    setAfter(values);\r\n  };\r\n\r\n\r\n  const loadChildren1 = async () => {\r\n    const options = {\r\n      headers: { Authorization: Config.authorization },\r\n    };\r\n    var response = await axios.get(\r\n      Config.base_url + \"/\" + Config.client + \"/executions/\" + runId + \"/children\",\r\n      options\r\n    );\r\n    for (var i = 0; i < response.data.data.length; i++) {\r\n      response.data.data[i].id = i;\r\n    }\r\n    setChildren1(response.data.data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div ref={componentRef}>\r\n        {/* your component code goes here */}\r\n      </div>\r\n      <div align=\"right\">\r\n      <Tooltip title=\"Download Report\" arrow>\r\n      <IconButton aria-label=\"delete\" onClick={downloadPDF} color=\"primary\">\r\n      <DownloadForOfflineTwoToneIcon  /></IconButton>\r\n      </Tooltip>\r\n        </div>\r\n      <Grid>\r\n        <Grid ref={componentRef} >\r\n          <HeadCard />\r\n          <MidCard data={execution1} work={children1} isExeLoaded={isExeLoaded} />\r\n          <FootCard data={children1} />\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6} style={{ padding: 50 }}>\r\n              <Typography variant=\"subtitle1\" align=\"center\" style={{ fontFamily: 'Montserrat, sans-serif', align: 'center' }}>INITIAL STATE </Typography>\r\n              <BeforeCard data={before} />\r\n            </Grid>\r\n            <Grid item xs={6} style={{ padding: 50 }}>\r\n              <Typography variant=\"subtitle1\" align=\"center\" style={{ fontFamily: 'Montserrat, sans-serif' }}>FINAL STATE</Typography>\r\n              <AfterCard data={after} />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid >\r\n            <Usercard />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Services } from \"../../pages\";\r\nimport axios from \"axios\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { LinearProgressWithLabel } from \"..\";\r\nimport { SimplePopover } from \"..\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Config } from \"../../config/DefaultSettings\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PlayCircleOutlineTwoToneIcon from '@mui/icons-material/PlayCircleOutlineTwoTone';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nlet success = 0;\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function ExecutionCard2(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [workflow, setWorkflow] = React.useState([]);\r\n\r\n\r\n  let successCount = props.work.filter((x) => x.status >= 1900).length;\r\n  let successPercent = (successCount / props.work.length) * 100;\r\n  let success = parseInt(successPercent.toFixed(0));\r\n\r\n  // const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  if (props.data == null) {\r\n    return null;\r\n  }\r\n  const objectname = props.data.name;\r\n\r\n  //Date Conversion\r\n  if (props.data.start_time) {\r\n    var start_temp_time = new Date(props.data.start_time);\r\n    var start_time = start_temp_time.toLocaleString(\"en-US\", {\r\n      timezone: Config.sys_timezone,\r\n    });\r\n  } else start_time = null;\r\n  if (props.data.end_time) {\r\n    var end_temp_time = new Date(props.data.end_time);\r\n    var end_time = end_temp_time.toLocaleString(\"en-US\", {\r\n      timezone: Config.sys_timezone,\r\n    });\r\n  } else end_time = null;\r\n\r\n  const loadWorkflow = async () => {\r\n    const options = {\r\n      headers: {\r\n        Authorization: Config.authorization,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const response = await axios.post(\r\n      Config.base_url + \"/\" + Config.client + \"/executions/\",\r\n      { object_name: props.data.name },\r\n      options\r\n    );\r\n\r\n    setWorkflow(response.data);\r\n    setOpen(true);\r\n\r\n  };\r\n\r\n\r\n  const message_workflow = workflow;\r\n  const message_workflow_id = workflow.run_id;\r\n  const message_workflow_alert = \"Launch Completed Successfully!, RunId:\" + message_workflow_id;\r\n\r\n\r\n  const handleClick = () => {\r\n    loadWorkflow();\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n\r\n    <Grid item sm xs={12}>\r\n      <Card\r\n        className={classes.root}\r\n        variant=\"outlined\"\r\n        style={{ background: \"#dbd9d9\" }}\r\n      >\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\">\r\n            {props.data.title}\r\n          </Typography>\r\n\r\n          <div>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" value={success} />\r\n              </Box>\r\n              <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {success}%\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n\r\n          </div>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                component=\"h2\"\r\n                align=\"left\"\r\n                color=\"primary\"\r\n                style={{ paddingLeft: \"20px\" }}\r\n              >\r\n                <b>Worfklow</b>: {props.data.name}\r\n              </Typography>\r\n            </Box>\r\n            <Box minWidth={35}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                component=\"h2\"\r\n                align=\"left\"\r\n                color=\"textSecondary\"\r\n                style={{ paddingLeft: \"20px\" }}\r\n              >\r\n                <b>Start Time:</b> {start_time}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                component=\"h2\"\r\n                align=\"left\"\r\n                color=\"textSecondary\"\r\n                style={{ paddingLeft: \"20px\" }}\r\n              >\r\n                <b>End Time:</b> {end_time}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                component=\"h2\"\r\n                align=\"left\"\r\n                color=\"textSecondary\"\r\n                style={{ paddingLeft: \"20px\" }}\r\n              >\r\n                <b>Estimated Runtime:</b> {(props.data.estimated_runtime / 60).toFixed(2)} min(s)\r\n              </Typography>\r\n              <Box width=\"100%\" mr={1}>\r\n                <Typography\r\n                  variant=\"overline\"\r\n                  component=\"h2\"\r\n                  align=\"left\"\r\n                  color=\"textSecondary\"\r\n                  style={{ paddingLeft: \"20px\" }}\r\n                >\r\n                  <b>Status:</b> {props.data.status_text}{\" \"}\r\n                  <span style={{ paddingLeft: \"400px\" }}> </span>\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box>\r\n            <Tooltip title=\"Execute\" arrow>\r\n              <IconButton aria-label=\"execute\" onClick={handleClick} color=\"primary\" size=\"small\" >\r\n                <PlayCircleOutlineTwoToneIcon /></IconButton>\r\n            </Tooltip>\r\n\r\n            <Snackbar\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              open={open}\r\n              autoHideDuration={6000}\r\n              onClose={handleClose}\r\n            >\r\n              <Alert onClose={handleClose} severity={message_workflow.run_id == null ? \"Error\" : \"Success\"}>\r\n                {message_workflow.run_id == null ? \"Error occured: Checkout the Automic UI\" : message_workflow_alert}\r\n              </Alert>\r\n            </Snackbar>\r\n          </Box>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={4}\r\n            lg={11}\r\n\r\n          >\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimplePopover() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n        Open Popover\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport OndemandVideoIcon from '@mui/icons-material/OndemandVideo';\r\nimport NavigationRoundedIcon from \"@material-ui/icons/NavigationRounded\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\n\r\nimport { Config } from \"../../config/DefaultSettings\";\r\n\r\n// import RepeatIcon from '@material-ui/icons/Repeat';\r\nimport PlayArrowTwoToneIcon from \"@material-ui/icons/PlayArrowTwoTone\";\r\nimport CheckCircleTwoToneIcon from \"@material-ui/icons/CheckCircleTwoTone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: \"6px 16px\",\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\nexport default function TimelineCard(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  let end_time = null;\r\n  let colorCode = null;\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    if (status === \"1900\") {\r\n      return \"white\";\r\n    } else\r\n      return \"blue\";\r\n  };\r\n  return (\r\n    <div className=\"root\" align=\"right\">\r\n      <Tooltip title=\"Monitor\" arrow>\r\n        <IconButton aria-label=\"delete\" onClick={handleClick} color=\"primary\">\r\n          <OndemandVideoIcon /></IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        {props.data.map((item, index) => {\r\n          if (item.end_time) {\r\n            var end_temp_time = new Date(item.end_time);\r\n            var end_time = end_temp_time.toLocaleString(\"en-US\", {\r\n              timezone: Config.sys_timezone,\r\n            });\r\n          }\r\n\r\n          return (\r\n            <Timeline align=\"alternate\" key={item + index}>\r\n              <TimelineItem>\r\n                <TimelineOppositeContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {end_time}\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n\r\n                  <TimelineDot\r\n                    color={\r\n                      (item.status < 1800) && (item.status != 1550)\r\n                        ? 'primary'\r\n                        : item.status === 1900\r\n                          ? \"grey\"\r\n                          : (item.status > 1800) && (item.status > 11900)\r\n                            ? \"secondary\"\r\n                            : item.status === 1550\r\n                              ? \"success\"\r\n                              : \"grey\"\r\n                    }\r\n                  >\r\n                    {/* <AssignmentTwoToneIcon /> */}\r\n                    <NavigationRoundedIcon color={\r\n                      item.status < 1800\r\n                        ? \"success\"\r\n                        : item.status === 1900\r\n                          ? \"success\"\r\n                          : \"error\"\r\n                    } />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                  <Paper elevation={3} className={classes.paper}>\r\n                    <Typography variant=\"h6\" component=\"h1\">\r\n                      {item.alias}\r\n                    </Typography>\r\n                    <Typography >{item.status_text}</Typography>\r\n                  </Paper>\r\n                </TimelineContent>\r\n              </TimelineItem>\r\n            </Timeline>\r\n          );\r\n        })}\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  mapContainer: {\r\n    height: `100vh`,\r\n    width: `calc(100%)`,\r\n    backgroundColor: \"#f00\",\r\n  },\r\n  agentsContainer: {\r\n    height: `100vh`,\r\n    width: `calc(100%)`,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(20),\r\n      width: theme.spacing(20),\r\n      height: theme.spacing(20),\r\n      boxShadow:\r\n        \"5px 3px 1px -2px red,0px 2px 2px 0px rgba(100,0,0,0.9),0px 1px 5px 0px rgba(0,0,0,0.12)\",\r\n    },\r\n  },\r\n}));\r\n// const bull = (\r\n//   <Box\r\n//     component=\"span\"\r\n//     sx={{ display: \"inline-block\", mx: \"1px\", transform: \"scale(0.8)\" }}\r\n//   >\r\n//     •\r\n//   </Box>\r\n// );\r\n\r\nexport default function Tileview(props) {\r\n  // const classes = useStyles();\r\n  // const [value, setValue] = React.useState(0);\r\n\r\n  const bull = (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        display: \"inline-block\",\r\n        mx: \"5px\",\r\n        transform: \"scale(0.8)\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      •\r\n    </Box>\r\n  );\r\n  const Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n  // var siteState = props.data.value1;\r\n\r\n  const getBorderColor = (siteState) => {\r\n    return siteState === \"PROD\" ? \"green\" : siteState === \"DR\" ? \"blue\" : \"orange\"\r\n\r\n  };\r\n\r\n  const getSiteIcon = (siteState) => {\r\n    return siteState === \"OK\" ? <ArrowDropUpIcon fontSize=\"large\" color=\"success\"></ArrowDropUpIcon> : <ArrowDropDownIcon fontSize=\"large\" color=\"error\"></ArrowDropDownIcon>\r\n\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <React.Fragment>\r\n        <Box\r\n          sx=\r\n\r\n          {{\r\n            borderLeft: 7, borderColor: getBorderColor(props.data.value1)\r\n\r\n          }}\r\n        >\r\n          <CardContent>\r\n\r\n            <div style={{ margin: \"1\" }}>\r\n              <Typography\r\n                align=\"left\"\r\n                variant=\"subtitle1\"\r\n                sx={{ fontSize: 20 }}\r\n                component=\"div\"\r\n              >\r\n                <b>{props.data.key}</b>\r\n              </Typography>\r\n              <Typography align=\"left\" variant=\"subtitle1\" component=\"div\">\r\n                {props.data.value4}\r\n              </Typography>\r\n            </div>\r\n\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                bgcolor: \"white\",\r\n              }}\r\n            >\r\n              <Item>\r\n                <Grid container direction=\"row\" alignItems=\"center\">\r\n                  <Grid item><b>PROD</b> </Grid>\r\n                  <Grid item>\r\n                    {getSiteIcon(props.data.value2)}\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </Item>\r\n              <Item>\r\n                {\" \"}\r\n                <Grid container direction=\"row\" alignItems=\"center\">\r\n                  <Grid item><b>\r\n                    DR</b></Grid>\r\n                  <Grid item>\r\n                    {getSiteIcon(props.data.value3)}\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </Item>\r\n\r\n\r\n            </Box>\r\n            <Typography align=\"right\" variant=\"subtitle1\" component=\"div\">\r\n              {props.data.value5}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Box>\r\n\r\n      </React.Fragment>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Chip from '@mui/material/Chip';\r\nimport { Config } from \"../../config/DefaultSettings\";\r\nimport moment from 'moment-timezone';\r\n\r\nimport {\r\n  DataGrid,\r\n  GridToolbarContainer,\r\n  GridToolbarExport,\r\n  gridClasses,\r\n} from '@mui/x-data-grid';\r\nimport {\r\n\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction CustomToolbar() {\r\n  return (\r\n    <GridToolbarContainer className={gridClasses.toolbarContainer}>\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\n\r\nconst columns = [\r\n  { field: 'title', headerName: 'Direction', width: 180 },\r\n  {\r\n    field: 'archive_key2',\r\n    headerName: 'Application',\r\n    width: 200,\r\n  },\r\n  {\r\n    field: 'name',\r\n    headerName: 'Workflow Name',\r\n    width: 250,\r\n  },\r\n\r\n\r\n  {\r\n    field: 'start_time',\r\n    headerName: 'Start Time',\r\n    width: 200,\r\n    valueFormatter: start_time => moment(start_time?.value).tz(Config.sys_timezone).format('DD/MM/YYYY hh:mm:ss')\r\n\r\n  },\r\n  {\r\n    field: 'end_time',\r\n    headerName: 'End Time',\r\n    width: 200,\r\n    valueFormatter: end_time => moment(end_time?.value).tz(Config.sys_timezone).format('DD/MM/YYYY hh:mm:ss')\r\n\r\n  },\r\n  {\r\n    field: 'runtime',\r\n    headerName: 'Duration',\r\n    width: 150,\r\n    renderCell: (runtime) => {\r\n      return (\r\n        <div>\r\n          {(runtime.value / 60).toFixed(2)} min(s)\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n\r\n\r\n  {\r\n    field: 'rtoStatus', // if RTO > runtime ? RTO Fulfilled : RTO VIOLATED\r\n    headerName: 'RTO Status',\r\n    width: 150,\r\n    renderCell: (rtoStatus) => (<Chip label={rtoStatus.value ? \"FULFILLED\" : \"VIOLATED\"} color={rtoStatus.value ? \"success\" : \"warning\"} />)\r\n  },\r\n  {\r\n    field: 'run_id',\r\n    headerName: 'Summary Report',\r\n    width: 150,\r\n    renderCell: (params) => (<Link to={`/dr-dashboard/report/${params.value}`} target=\"_blank\"  >{params.value}</Link>)\r\n  },\r\n\r\n];\r\n\r\n\r\nexport default function ExportSelectorGrid(props) {\r\n\r\n\r\n\r\n\r\n\r\n  var slo_time = parseInt(props.data.archive_key1);\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{ height: 500, width: 'auto' }}\r\n    >\r\n      <DataGrid\r\n        // {...data}\r\n\r\n        rows={props.data}\r\n        columns={columns}\r\n        pageSize={7}\r\n        rowsPerPageOptions={[10]}\r\n        // rowLength=\"100\"\r\n        // editable=\"true\"\r\n        disableSelectionOnClick\r\n      // components={{\r\n      //   Toolbar: CustomToolbar,\r\n      // }}\r\n      />\r\n\r\n    </div>\r\n\r\n  );\r\n}","\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport TextField from '@mui/material/TextField';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\n\r\nlet success = 0;\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function ExecutionCard1() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n\r\n    <Grid style={{ padding: 10 }}>\r\n      <Typography\r\n        variant=\"h5\"\r\n        component=\"h1\"\r\n        align=\"center\"\r\n        style={{ fontFamily: 'Montserrat, sans-serif'}}>\r\n        <b>DR EXECUTION SUMMARY</b>\r\n      </Typography>\r\n      <Grid direction='row' container spacing={0}>\r\n\r\n        <Grid item xs={6} style={{ padding: 10 }}>\r\n          <Card\r\n            className={classes.root}\r\n            variant=\"outlined\"\r\n          >\r\n            <CardContent>\r\n\r\n\r\n              <div>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Box minWidth={35}>\r\n\r\n\r\n\r\n                  </Box>\r\n                </Box>\r\n\r\n\r\n\r\n                <TextField\r\n                 sx={{ m: 0, width: '50ch' }}\r\n                  helperText=\"\"\r\n                  id=\"demo-helper-text-misaligned\"\r\n                  label=\"NAME\"\r\n                  style={{ paddingTop: \"0px\", paddingBottom: \"0px\" }}\r\n                  size=\"small\"\r\n                  color=\"action\" focused\r\n                  variant=\"filled\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AccountCircle  color=\"info\"/>\r\n                      </InputAdornment>\r\n                    ),\r\n                   \r\n                  }}\r\n                />\r\n\r\n                <Grid item xs={5} >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Grid>\r\n                <Box minWidth={1}>\r\n                  <TextField\r\n                   sx={{ m: 0, width: '50ch' }}\r\n                    helperText=\"\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"DESIGNATION\"\r\n                    style={{ paddingTop: \"0px\" }}\r\n                    size=\"small\"\r\n                    color=\"action\" focused\r\n                    variant=\"filled\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <WorkIcon  color=\"info\"/>\r\n                        </InputAdornment>\r\n                      ),\r\n                     \r\n                    }}\r\n                  /> </Box>\r\n\r\n\r\n              </div>\r\n\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} style={{ padding: 10 }}>\r\n\r\n          <Card\r\n            className={classes.root}\r\n            variant=\"outlined\"\r\n          >\r\n            <CardContent>\r\n\r\n              <div>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Box minWidth={35}>\r\n\r\n\r\n\r\n                  </Box>\r\n                </Box>\r\n\r\n                <TextField\r\n                  fullWidth sx={{ m: 0 }}\r\n                  helperText=\"\"\r\n                  id=\"demo-helper-text-misaligned\"\r\n                  label=\"DR GOAL\"\r\n                  style={{ paddingTop: \"0px\", paddingBottom: \"0px\" }}\r\n                  size=\"normal\"\r\n                  color=\"action\" focused\r\n                  variant=\"standard\"\r\n                />\r\n                <Grid item xs={5} >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Grid>\r\n                <Box minWidth={1}>\r\n                  <TextField\r\n                    fullWidth sx={{ m: 0 }}\r\n                    helperText=\"\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"BUSINESS IMPACT\"\r\n                    style={{ paddingTop: \"0px\" }}\r\n                    size=\"normal\"\r\n                    color=\"action\" focused\r\n                    variant=\"standard\"\r\n                  /> </Box>\r\n\r\n\r\n              </div>\r\n\r\n            </CardContent>\r\n          </Card>\r\n\r\n        </Grid></Grid></Grid>\r\n\r\n  );\r\n}\r\n","\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Config } from \"../../config/DefaultSettings\";\r\n\r\n\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Chip from '@mui/material/Chip';\r\n\r\nimport StorageIcon from '@mui/icons-material/Storage';\r\nimport AccessTimeTwoToneIcon from '@mui/icons-material/AccessTimeTwoTone';\r\nimport AccessTimeFilledTwoToneIcon from '@mui/icons-material/AccessTimeFilledTwoTone';\r\nimport AccountTreeTwoToneIcon from '@mui/icons-material/AccountTreeTwoTone';\r\nimport SpeedTwoToneIcon from '@mui/icons-material/SpeedTwoTone';\r\nimport TimerTwoToneIcon from '@mui/icons-material/TimerTwoTone';\r\nimport FlagTwoToneIcon from '@mui/icons-material/FlagTwoTone';\r\n;\r\n\r\n\r\nlet success = 0;\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\nexport default function Midcard(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alertopen, setAlertOpen] = React.useState(null);\r\n  const [workflow, setWorkflow] = React.useState([]);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n    // loadWorkflow();\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  var start_temp_time = new Date(props.data.start_time);\r\n  var start_time = start_temp_time.toLocaleString(\"en-US\", {\r\n    timezone: Config.sys_timezone,\r\n  });\r\n\r\n  var end_temp_time = new Date(props.data.end_time);\r\n  var end_time = end_temp_time.toLocaleString(\"en-US\", {\r\n    timezone: Config.sys_timezone,\r\n  });\r\n\r\n  var run_time = (props.data.runtime/60).toFixed(2);\r\n  var slo_time = parseFloat(props.data.archive_key1);\r\n\r\n\r\n\r\n  return (\r\n  \r\n    <Grid style={{ padding:10 }} >\r\n         <Typography\r\n               variant=\"subtitle1\"\r\n                component=\"h1\"\r\n                align=\"center\"\r\n                 \r\n             \r\n                style={{ fontFamily: 'Montserrat, sans-serif'}}>\r\n               <b>EXECUTION HIGHLIGHTS</b>\r\n              </Typography>\r\n\r\n      \r\n\r\n      <Grid direction='row' container spacing={0}>\r\n        \r\n            <Grid  item xs={6} style={{ padding:10 }}>\r\n                       <Paper>\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Grid container direction=\"row\" alignItems=\"center\"  >\r\n            <StorageIcon /><b>Execution: </b>&nbsp;&nbsp;{props.data.archive_key2} \r\n            </Grid>\r\n            <Grid container direction=\"row\" alignItems=\"center\" variant=\"overline\" justifyContent=\"flex-start\">\r\n            <AccessTimeTwoToneIcon /><b>DR Execution Start Time:</b> &nbsp;&nbsp;{start_time} \r\n            </Grid>\r\n                           \r\n            <Grid container direction=\"row\" alignItems=\"center\" variant=\"overline\">\r\n            <AccessTimeFilledTwoToneIcon /><b>DR Execution End Time:</b>  &nbsp;&nbsp;{end_time} \r\n            </Grid>\r\n            <Grid container direction=\"row\" alignItems=\"center\" variant=\"overline\">\r\n            <AccountTreeTwoToneIcon /><b>Total Number of Steps:</b>  &nbsp;&nbsp;\r\n            {props.work.length}     \r\n           \r\n             </Grid>\r\n             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n            </Paper>\r\n          \r\n           \r\n              \r\n           </Grid>    \r\n           {/* <Grid item xs={1}></Grid> */}\r\n           <Grid item xs={6} style={{ padding:10 }}>   \r\n           <Paper>\r\n           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n            {/* <Divider orientation=\"vertical\" variant=\"string\" flexItem light /> */}\r\n                     <Grid container display=\"flex\" direction=\"row\" alignItems=\"center\">\r\n            <SpeedTwoToneIcon /><b>Defined Recovery Time Objective:</b> &nbsp;&nbsp;{props.data.archive_key1} min(s)\r\n            </Grid>\r\n            <Grid container  direction=\"row\" alignItems=\"center\">\r\n            <TimerTwoToneIcon /><b>Actual Recovery Time (Execution Time):</b> &nbsp;&nbsp;{run_time} min(s)\r\n            </Grid>\r\n            <Grid container  direction=\"row\" alignItems=\"center\">\r\n            <FlagTwoToneIcon /><b>Execution Summary:</b>  &nbsp;&nbsp; \r\n            {(props.isExeLoaded && !isNaN(run_time)) && <Chip label={run_time < slo_time ? \"FULFILLED\": \"VIOLATED\"} color={run_time < slo_time ? \"success\": \"warning\"} size=\"small\"/>}\r\n            </Grid>\r\n            <Grid container  direction=\"row\" alignItems=\"center\">\r\n            <FlagTwoToneIcon /><b>Status:</b>  &nbsp;&nbsp;{props.data.status_text}\r\n            </Grid>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n            </Paper>\r\n            </Grid>\r\n    </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Config } from \"../../config/DefaultSettings\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport moment from 'moment-timezone';\r\nimport {\r\n\r\n  GridToolbarContainer,\r\n  GridToolbarExport,\r\n  gridClasses,\r\n} from '@mui/x-data-grid';\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nfunction CustomToolbar() {\r\n  return (\r\n    <GridToolbarContainer className={gridClasses.toolbarContainer}>\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\nexport default function FootCard(props) {\r\n\r\n\r\n  var runtime = (props.data.runtime / 60).toFixed(2);\r\n  var runtime = (props.data.runtime / 60).toFixed(2);\r\n  var slotime = props.data.archive_key1\r\n\r\n\r\n  const getStatusColor = (status) => {\r\n    if (status === \"1900\") {\r\n      return \"white\";\r\n    } else\r\n      return \"blue\";\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid>\r\n\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        component=\"h1\"\r\n        align=\"center\"\r\n\r\n        style={{ fontFamily: 'Montserrat, sans-serif' }}>\r\n        EXECUTION STEPS\r\n      </Typography>\r\n\r\n      <Grid style={{ padding: 50 }}>\r\n        <div style={{ height: \"100%\", width: '100%' }}>\r\n\r\n\r\n\r\n          {/* <Paper variant='elevation'> */}\r\n          {props.data == null ? null : <DataGrid autoHeight rows={props.data} columns={columns} initialState={{\r\n            pagination: {\r\n              paginationModel: { pageSize: 25, page: 0 },\r\n            },\r\n          }} />}\r\n          {/* </Paper> */}\r\n\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n\r\n  );\r\n}\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: '#', width: 90 },\r\n  {\r\n    field: 'title',\r\n    headerName: 'Step Name',\r\n    width: 300,\r\n    editable: false,\r\n  },\r\n\r\n  {\r\n    field: 'start_time',\r\n    headerName: 'Start Time',\r\n    width: 250,\r\n    valueFormatter: start_time => moment(start_time?.value).tz(Config.sys_timezone).format('DD/MM/YYYY hh:mm:ss')\r\n\r\n\r\n  },\r\n  {\r\n    field: 'end_time',\r\n    headerName: 'End Time',\r\n    width: 200,\r\n    valueFormatter: end_time => moment(end_time?.value).tz(Config.sys_timezone).format('DD/MM/YYYY hh:mm:ss')\r\n\r\n  },\r\n  {\r\n    field: 'run_id',\r\n    headerName: 'RunId',\r\n    type: 'text',\r\n    width: 110,\r\n    editable: false,\r\n\r\n  },\r\n\r\n  {\r\n    field: 'runtime',\r\n    headerName: 'Duration (Min.)',\r\n    type: 'text',\r\n    width: 150,\r\n    renderCell: (runtime) => {\r\n      return (\r\n        <div>\r\n          {(runtime.value / 60).toFixed(2)}\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n  // {\r\n  {\r\n    field: 'status_text',\r\n    headerName: 'Status Code',\r\n    type: 'text',\r\n    width: 300,\r\n  }\r\n\r\n];\r\n\r\n","\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport CastForEducationIcon from '@mui/icons-material/CastForEducation';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\n\r\nlet success = 0;\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n// function Alert(props) {\r\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n// }\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function ExecutionCard1() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alertopen, setAlertOpen] = React.useState(null);\r\n  const [workflow, setWorkflow] = React.useState([]);\r\n\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n    // loadWorkflow();\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n\r\n    <Grid style={{ padding: 30 }}>\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        component=\"h1\"\r\n        align=\"center\"\r\n        style={{ fontFamily: 'Montserrat, sans-serif' }}\r\n      >\r\n        <b>TEST RESULTS</b>\r\n      </Typography>\r\n      <Grid style={{ padding: 20 }}>\r\n        <Card\r\n          className={classes.root}\r\n          variant=\"outlined\"\r\n        >\r\n          <CardContent>\r\n\r\n            <div>\r\n              <Box display=\"flex\" alignItems=\"center\" sx={{\r\n                width: 500,\r\n                maxWidth: '100%',\r\n              }}>\r\n\r\n\r\n\r\n              </Box>\r\n\r\n\r\n              <TextField fullWidth sx={{ m: 1 }}\r\n                id=\"challenges\"\r\n                label=\"CHALLENGES ENCOUNTERED\"\r\n                multiline\r\n                maxRows={5}\r\n                variant=\"filled\"\r\n                color=\"warning\" focused\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <WarningIcon color=\"warning\" />\r\n                    </InputAdornment>\r\n                  ),\r\n\r\n                }}\r\n              />\r\n\r\n              <TextField fullWidth sx={{ m: 1 }}\r\n                id=\"lessons\"\r\n                label=\"LESSONS LEARNED\"\r\n                multiline\r\n                maxRows={5}\r\n                variant=\"filled\"\r\n                color=\"success\" focused\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <CastForEducationIcon color=\"success\" />\r\n                    </InputAdornment>\r\n                  ),\r\n\r\n                }}\r\n              />\r\n\r\n              <TextField fullWidth sx={{ m: 1 }}\r\n                id=\"notes\"\r\n                label=\"ADDITIONAL NOTES\"\r\n                multiline\r\n                maxRows={5}\r\n                variant=\"filled\"\r\n                color=\"primary\" focused\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <DescriptionIcon color=\"primary\" />\r\n                    </InputAdornment>\r\n                  ),\r\n\r\n                }}\r\n              />\r\n\r\n            </div>\r\n\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {\r\n  \r\n  GridToolbarContainer,\r\n  GridToolbarExport,\r\n  gridClasses,\r\n} from '@mui/x-data-grid';\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction StatusIcon({ status }) {\r\n  if (status === 'Healthy') {\r\n    return <CheckIcon style={{ color: 'green' }} />;\r\n  } else if (status === 'Impaired') {\r\n    return <CloseIcon style={{ color: 'red' }} />;\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\nfunction CustomToolbar() {\r\n  return (\r\n    <GridToolbarContainer className={gridClasses.toolbarContainer}>\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\n\r\n\r\nexport default function BeforeCard(props) {\r\n\r\n  if (props.data == null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"Service Table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Service Name</TableCell>\r\n            <TableCell>Site</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell>Updated on</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.data.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell>{row.key}</TableCell>\r\n              <TableCell>{row.value1}</TableCell>\r\n              <TableCell><StatusIcon status={row.value2} /></TableCell>\r\n              <TableCell>{row.value3}</TableCell>\r\n                  </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n\r\n\r\n ","import * as React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {\r\n  GridToolbarContainer,\r\n  GridToolbarExport,\r\n  gridClasses,\r\n} from '@mui/x-data-grid';\r\n\r\n\r\n\r\nfunction StatusIcon({ status }) {\r\n  if (status === 'Healthy') {\r\n    return <CheckIcon style={{ color: 'green' }} />;\r\n  } else if (status === 'Impaired') {\r\n    return <CloseIcon style={{ color: 'red' }} />;\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\nexport default function AfterCard(props) {\r\n\r\n  if (props.data == null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"Service Table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Service Name</TableCell>\r\n            <TableCell>Site</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell>Updated on</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.data.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell>{row.key}</TableCell>\r\n              <TableCell>{row.value1}</TableCell>\r\n              <TableCell><StatusIcon status={row.value2} /></TableCell>\r\n              <TableCell>{row.value3}</TableCell>\r\n                  </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n\r\n\r\n ","import React from \"react\";\r\n// import background1 from \"./img/background.jpg\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  \r\n} from \"react-router-dom\";\r\nimport {\r\n  AppBar\r\n} from \"./components\";\r\nimport {\r\n  Home,\r\n  Services,\r\n  Report,\r\n  \r\n} from \"./pages\";\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n      {/* <div  style={{ backgroundImage: `url(${background1})` }}> */}\r\n      <div style={{ backgroundColor: '#fafafa' }}>  \r\n        <AppBar>\r\n        {/* <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/users\">Users</Link>\r\n            </li>\r\n          </ul>\r\n        </nav> */}\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n        <Route path=\"/dr-dashboard/Home\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/dr-dashboard/services\">\r\n            <Services />\r\n          </Route>\r\n                  <Route path=\"/dr-dashboard/Report/:runId\">\r\n            {/* <PDFViewer> */}\r\n            <Report />\r\n            {/* </PDFViewer> */}\r\n          </Route>\r\n          <Route path=\"/Execution\">\r\n            \r\n          </Route>\r\n          <Route path=\"/SendEmail\">\r\n            <SendEmail />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </AppBar>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Inbox() {\r\n  return <h2>Inbox</h2>;\r\n}\r\n\r\n// function Report() {\r\n//   return <h2>Starred</h2>;\r\n// }\r\n\r\nfunction Drafts() {\r\n  return <h2>Drafts</h2>;\r\n}\r\n\r\nfunction SendEmail() {\r\n  return <h2>SendEmail</h2>;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}